# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class ProductPreviewRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ProductPreviewRequest - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'sku': 'str',
            'template': 'str',
            'images': 'list[ProductPreviewImage]',
            'max_height': 'int',
            'max_width': 'int'
        }

        self.attribute_map = {
            'sku': 'Sku',
            'template': 'Template',
            'images': 'Images',
            'max_height': 'MaxHeight',
            'max_width': 'MaxWidth'
        }

        self._sku = None
        self._template = None
        self._images = None
        self._max_height = None
        self._max_width = None

    @property
    def sku(self):
        """
        Gets the sku of this ProductPreviewRequest.


        :return: The sku of this ProductPreviewRequest.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """
        Sets the sku of this ProductPreviewRequest.


        :param sku: The sku of this ProductPreviewRequest.
        :type: str
        """
        self._sku = sku

    @property
    def template(self):
        """
        Gets the template of this ProductPreviewRequest.


        :return: The template of this ProductPreviewRequest.
        :rtype: str
        """
        return self._template

    @template.setter
    def template(self, template):
        """
        Sets the template of this ProductPreviewRequest.


        :param template: The template of this ProductPreviewRequest.
        :type: str
        """
        self._template = template

    @property
    def images(self):
        """
        Gets the images of this ProductPreviewRequest.


        :return: The images of this ProductPreviewRequest.
        :rtype: list[ProductPreviewImage]
        """
        return self._images

    @images.setter
    def images(self, images):
        """
        Sets the images of this ProductPreviewRequest.


        :param images: The images of this ProductPreviewRequest.
        :type: list[ProductPreviewImage]
        """
        self._images = images

    @property
    def max_height(self):
        """
        Gets the max_height of this ProductPreviewRequest.
        Max height of the resultant image. Defaults to 500px

        :return: The max_height of this ProductPreviewRequest.
        :rtype: int
        """
        return self._max_height

    @max_height.setter
    def max_height(self, max_height):
        """
        Sets the max_height of this ProductPreviewRequest.
        Max height of the resultant image. Defaults to 500px

        :param max_height: The max_height of this ProductPreviewRequest.
        :type: int
        """
        self._max_height = max_height

    @property
    def max_width(self):
        """
        Gets the max_width of this ProductPreviewRequest.
        Max width of the resultant image. Defaults to 500px

        :return: The max_width of this ProductPreviewRequest.
        :rtype: int
        """
        return self._max_width

    @max_width.setter
    def max_width(self, max_width):
        """
        Sets the max_width of this ProductPreviewRequest.
        Max width of the resultant image. Defaults to 500px

        :param max_width: The max_width of this ProductPreviewRequest.
        :type: int
        """
        self._max_width = max_width

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

