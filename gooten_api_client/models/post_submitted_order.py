# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""



from pprint import pformat
from six import iteritems


class PostSubmittedOrder(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        PostSubmittedOrder - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'nice_id': 'str',
            'souce_id': 'str',
            'items': 'list[PostSubmittedItem]',
            'total': 'ProductPriceInfo',
            'shipping_total': 'ProductPriceInfo',
            'discount_amount': 'ProductPriceInfo',
            'discount_code': 'str',
            'billing_address': 'ShipToAddress',
            'shipping_address': 'ShipToAddress',
            'meta': 'Meta'
        }

        self.attribute_map = {
            'id': 'Id',
            'nice_id': 'NiceId',
            'souce_id': 'SouceId',
            'items': 'Items',
            'total': 'Total',
            'shipping_total': 'ShippingTotal',
            'discount_amount': 'DiscountAmount',
            'discount_code': 'DiscountCode',
            'billing_address': 'BillingAddress',
            'shipping_address': 'ShippingAddress',
            'meta': 'Meta'
        }


        self._id = None

        self._nice_id = None

        self._souce_id = None

        self._items = None

        self._total = None

        self._shipping_total = None

        self._discount_amount = None

        self._discount_code = None

        self._billing_address = None

        self._shipping_address = None

        self._meta = None



    @property
    def id(self):
        """
        Gets the id of this PostSubmittedOrder.
        The unique ID we use within our system.

        :return: The id of this PostSubmittedOrder.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this PostSubmittedOrder.
        The unique ID we use within our system.

        :param id: The id of this PostSubmittedOrder.
        :type: str
        """
        self._id = id


    @property
    def nice_id(self):
        """
        Gets the nice_id of this PostSubmittedOrder.
        A short, non-unique ID that is optionally used for customer service.

        :return: The nice_id of this PostSubmittedOrder.
        :rtype: str
        """
        return self._nice_id

    @nice_id.setter
    def nice_id(self, nice_id):
        """
        Sets the nice_id of this PostSubmittedOrder.
        A short, non-unique ID that is optionally used for customer service.

        :param nice_id: The nice_id of this PostSubmittedOrder.
        :type: str
        """
        self._nice_id = nice_id


    @property
    def souce_id(self):
        """
        Gets the souce_id of this PostSubmittedOrder.
        Partner's internal ID-- entirely optional

        :return: The souce_id of this PostSubmittedOrder.
        :rtype: str
        """
        return self._souce_id

    @souce_id.setter
    def souce_id(self, souce_id):
        """
        Sets the souce_id of this PostSubmittedOrder.
        Partner's internal ID-- entirely optional

        :param souce_id: The souce_id of this PostSubmittedOrder.
        :type: str
        """
        self._souce_id = souce_id


    @property
    def items(self):
        """
        Gets the items of this PostSubmittedOrder.


        :return: The items of this PostSubmittedOrder.
        :rtype: list[PostSubmittedItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """
        Sets the items of this PostSubmittedOrder.


        :param items: The items of this PostSubmittedOrder.
        :type: list[PostSubmittedItem]
        """
        self._items = items


    @property
    def total(self):
        """
        Gets the total of this PostSubmittedOrder.


        :return: The total of this PostSubmittedOrder.
        :rtype: ProductPriceInfo
        """
        return self._total

    @total.setter
    def total(self, total):
        """
        Sets the total of this PostSubmittedOrder.


        :param total: The total of this PostSubmittedOrder.
        :type: ProductPriceInfo
        """
        self._total = total


    @property
    def shipping_total(self):
        """
        Gets the shipping_total of this PostSubmittedOrder.


        :return: The shipping_total of this PostSubmittedOrder.
        :rtype: ProductPriceInfo
        """
        return self._shipping_total

    @shipping_total.setter
    def shipping_total(self, shipping_total):
        """
        Sets the shipping_total of this PostSubmittedOrder.


        :param shipping_total: The shipping_total of this PostSubmittedOrder.
        :type: ProductPriceInfo
        """
        self._shipping_total = shipping_total


    @property
    def discount_amount(self):
        """
        Gets the discount_amount of this PostSubmittedOrder.


        :return: The discount_amount of this PostSubmittedOrder.
        :rtype: ProductPriceInfo
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """
        Sets the discount_amount of this PostSubmittedOrder.


        :param discount_amount: The discount_amount of this PostSubmittedOrder.
        :type: ProductPriceInfo
        """
        self._discount_amount = discount_amount


    @property
    def discount_code(self):
        """
        Gets the discount_code of this PostSubmittedOrder.


        :return: The discount_code of this PostSubmittedOrder.
        :rtype: str
        """
        return self._discount_code

    @discount_code.setter
    def discount_code(self, discount_code):
        """
        Sets the discount_code of this PostSubmittedOrder.


        :param discount_code: The discount_code of this PostSubmittedOrder.
        :type: str
        """
        self._discount_code = discount_code


    @property
    def billing_address(self):
        """
        Gets the billing_address of this PostSubmittedOrder.


        :return: The billing_address of this PostSubmittedOrder.
        :rtype: ShipToAddress
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """
        Sets the billing_address of this PostSubmittedOrder.


        :param billing_address: The billing_address of this PostSubmittedOrder.
        :type: ShipToAddress
        """
        self._billing_address = billing_address


    @property
    def shipping_address(self):
        """
        Gets the shipping_address of this PostSubmittedOrder.


        :return: The shipping_address of this PostSubmittedOrder.
        :rtype: ShipToAddress
        """
        return self._shipping_address

    @shipping_address.setter
    def shipping_address(self, shipping_address):
        """
        Sets the shipping_address of this PostSubmittedOrder.


        :param shipping_address: The shipping_address of this PostSubmittedOrder.
        :type: ShipToAddress
        """
        self._shipping_address = shipping_address


    @property
    def meta(self):
        """
        Gets the meta of this PostSubmittedOrder.
        An optional Map<string,string> of misc properties.

        :return: The meta of this PostSubmittedOrder.
        :rtype: Meta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """
        Sets the meta of this PostSubmittedOrder.
        An optional Map<string,string> of misc properties.

        :param meta: The meta of this PostSubmittedOrder.
        :type: Meta
        """
        self._meta = meta


    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other



