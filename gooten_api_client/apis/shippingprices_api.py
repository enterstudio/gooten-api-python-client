# coding: utf-8

"""
ShippingpricesApi.py
Copyright 2016 SmartBear Software

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
"""

from __future__ import absolute_import

import sys
import os

# python 2 and python 3 compatibility library
from six import iteritems

from ..configuration import Configuration
from ..api_client import ApiClient



class ShippingpricesApi(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        config = Configuration()
        if api_client:
            self.api_client = api_client
        else:
            if not config.api_client:
                config.api_client = ApiClient()
            self.api_client = config.api_client


    def p_ost_shippingprices(self, shipping_prices_request, **kwargs):
        """
        Get a list of shipping options and prices for items
        Get a list of shipping options and prices for items.

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>

        >>> thread = api.p_ost_shippingprices(shipping_prices_request, callback=callback_function)



        :param callback function: The callback function
            for asynchronous request. (optional)

        :param ShippingPricesRequest shipping_prices_request: DTO with required information (required)

        :param str partner_billing_key: Partner billing key

        :return: ShippingPricesResult
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['shipping_prices_request', 'partner_billing_key']
        all_params.append('callback')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method p_ost_shippingprices" % key
                )
            params[key] = val
        del params['kwargs']



        # verify the required parameter 'shipping_prices_request' is set
        if ('shipping_prices_request' not in params) or (params['shipping_prices_request'] is None):
            raise ValueError("Missing the required parameter `shipping_prices_request` when calling `p_ost_shippingprices`")





        resource_path = '/shippingprices/'.replace('{format}', 'json')
        path_params = {}


        query_params = {}

        if 'partner_billing_key' in params:
            query_params['partnerBillingKey'] = params['partner_billing_key']


        header_params = {}


        form_params = []
        local_var_files = {}


        body_params = None

        if 'shipping_prices_request' in params:
            body_params = params['shipping_prices_request']


        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept(['application/json'])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type(['application/json'])

        # Authentication setting
        auth_settings = []

        response = self.api_client.call_api(resource_path, 'POST',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='ShippingPricesResult',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'))
        return response


